.TH "whitenoise" 1
.SH "NAME"
whitenoise \- command-line ambient random noise generator
.SH "SYNOPSIS"
.B whitenoise
[\fIOPTION(s)\fR]...
.SH "DESCRIPTION"
\fBwhitenoise\fP is a little utility that allows your computer to act as an ambient random noise generator. You may find this useful for drowning out noisy neighbors, helping you sleep, etc.
.SH "OPTIONS"
.TP
.B \-c \fICUTOFF
Sets the lowpass frequency cutoff. CUTOFF is a number in the range (0, 1), with a default value of 0.3.
.TP
.B \-r \fIRATE
Sets the samplerate for the sound card, in Hz. Acceptable values are 11025 and 22050, with a default value of 22050.
.TP
.B \-f \fIFILTNUM
Use a filter of type FILTNUM, which may take the following values:
.PP
		0: Blackman-windowed FIR lowpass (default)
.PP
		1: Bartlett-windowed FIR lowpass
.PP
		2: Hanning-windowed FIR lowpass
.PP
		3: Hamming-windowed FIR lowpass
.PP
		4: Rectangular-windowed FIR lowpass
.TP
.B \-l \fILENGTH\fR
Sets the FIR filter length. LENGTH is an integer in the range [1, 100], with a default value of 25.
.TP
.B \-t \fITIME\fR
Sets the length of time to generate noise, in minutes.
.TP
.B \-f \fIFADETIME\fR
Fade the noise out over FADETIME  seconds. Valid only when used along
with the 
.B -t
flag.
.TP
.B \-p \fIWIDTH\fR
Output a plot of the filter frequency response, WIDTH is the
horizontal resolution of the PNG image, with default 320. The image
will have filename ~/.whitenoise/filter.png .
.TP
.B \-L \fILATENCY\fR
Configure the audio buffers for approximately LATENCY milliseconds of
delay, with default 200. Increase the value to alleviate problems with
skipping.
.TP
.B \-a
Interface with aRts instead of opening /dev/dsp directly.
.TP
.B \-s
Read commands from stdin in realtime.
.TP
.B \-v \-\-version
Print version information.
.TP
.B \-\-help \-?
Print help page.
.PP
Increasing or decreasing the frequency cutoff value will increase or
decrease the amount of high frequency content in the noise. The
samplerate can be lowered to 11025 Hz for "warmer" noise that is
dominated by lower frequencies. Choosing a different filter will
impact the overall balance of frequencies in the noise. Increasing the
filter length will make the lowpass filter more ideal, at the cost of
increased CPU usage.
.PP
If whitenoise tends to skip (for example, under high CPU load), then
it may help to increase the latency via the "-L" option.
.PP
The "-p" option is available only if whitenoise is compiled with
support for FFTW 3.x. Similarly, the "-a" option is only available
when whitenoise has been compiled against aRts.
.PP
When the "-s" option is used, whitenoise will continually read
commands from stdin. This may be useful for creating a frontend to
control whitenoise1. See the next section for further information.
.SH "CONTROLLING WHITENOISE VIA STANDARD INPUT"
If whitenoise is launched in interactive mode via the "-s" option,
then it will continually scan standard input for command strings.
Acceptable command strings take the form
.PP
		xaaaaaa...
.PP
and should be terminated with newline. "x" represents a command
character; the possible characters are the same as the command-line
switches: { c, r, F, l, t, f, p}. "aaaaa...." is a string providing
the argument of the command. The character `q' can also be used to
terminate whitenoise. Some special cases deserve attention:
.PP
	Using the "tTIME" command will reset the timer;
.br
	i.e. the command "t30" will shut off whitenoise 30 minutes after the command is entered.
.PP
	To cancel the timer or the fade option, use "-1" as the argument to those commands.

You should expect a bit of lag between entering a command and hearing
the result.
.SH "HOW IT WORKS"
Uniform random noise is generated with \fBrand\fP().  This noise sounds
awful because it has too much high-frequency content, so it is
lowpass filter.  There are a number of standard filters available
for this purpose, all of which are designed using the window method.
Yes, I am aware that the noise generated by this scheme is not
technically "white," but real white noise has rather disturbing
audio characteristics.

.SH "DEPENCENCIES"
\fBwhitenoise\fP requires a sound card with Open Sound System-compatible
drivers.  On very low-end systems, it may be necessary to decrease
the filter length to prevent skipping.

.SH "OPTIONAL DEPENDENCIES"
.TP
FFTW
generate plots of the filter frequency response
.TP
gnuplot
also needed for plots, but not needed during compilation

.SH "BUGS"
Please send bug reports and/or patches to pelzlpj@gmail.com

.SH "AUTHORS"
\fBwhitenoise\fP    written by Paul Pelzl
.br
\fBwhitenoise\fP(1) written by Hannes Rist
.br
\fBwhitenoise\fP(1) modified by Tim Yang

.SH "COPYING"
Copyright (c) 2001, 2002, 2004 Paul Pelzl.  License GPLv2+: GNU
.br
GPL version 2 or later <http://www.gnu.org/licenses/gpl-2.0.html>
.br
This is free software: you are free to change and redistribute
.br
it.  There is NO WARRANTY, to the extent permitted by law.
